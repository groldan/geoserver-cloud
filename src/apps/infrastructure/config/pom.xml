<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.geoserver.cloud.apps</groupId>
    <artifactId>gs-cloud-infrastructure</artifactId>
    <version>${revision}</version>
  </parent>
  <artifactId>gs-cloud-config-service</artifactId>
  <packaging>jar</packaging>
  <name>Cloud config service</name>
  <properties>
    <spring-boot.build-image.imageName>geoservercloud/geoserver-cloud-config:${project.version}</spring-boot.build-image.imageName>
    <start-class>org.geoserver.cloud.config.ConfigApplication</start-class>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.geoserver.cloud</groupId>
      <artifactId>gs-cloud-spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-config-server</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.retry</groupId>
      <artifactId>spring-retry</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-aop</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring-boot.version}</version>
          <configuration>
            <excludes>
              <exclude>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
              </exclude>
            </excludes>
            <layers>
              <enabled>true</enabled>
            </layers>
            <image>
              <pullPolicy>IF_NOT_PRESENT</pullPolicy>
              <env>
                <!-- Builder config options -->
                <BP_JVM_VERSION>17</BP_JVM_VERSION>
                <BP_JVM_TYPE>JRE</BP_JVM_TYPE>
                <BPL_JVM_THREAD_COUNT>8</BPL_JVM_THREAD_COUNT>
                <!-- Runtime config options -->
                <!-- Allow running on low-resource provisioned containers, this service doesn't need much -->
                <BPE_DELIM_JAVA_TOOL_OPTIONS xml:space="preserve"></BPE_DELIM_JAVA_TOOL_OPTIONS>
                <BPE_JAVA_TOOL_OPTIONS>-Xss256K -XX:ReservedCodeCacheSize=64M -XX:MaxMetaspaceSize=128M</BPE_JAVA_TOOL_OPTIONS>
                <BPE_JVM_THREAD_COUNT>8</BPE_JVM_THREAD_COUNT>
              </env>
            </image>
          </configuration>
          <executions>
            <execution>
              <id>build-info</id>
              <goals>
                <goal>build-info</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>build-info</id>
            <goals>
              <goal>build-info</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
