<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.geoserver.cloud.catalog</groupId>
    <artifactId>gs-cloud-catalog</artifactId>
    <version>${revision}</version>
  </parent>
  <artifactId>gs-cloud-rest-backup</artifactId>
  <packaging>jar</packaging>
  <description>Configuration backup/restore REST API</description>
  <dependencies>
    <dependency>
      <groupId>org.geoserver.cloud.catalog.jackson</groupId>
      <artifactId>gs-cloud-starter-jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>io.projectreactor</groupId>
      <artifactId>reactor-core</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <!-- provided scope, so its added explicitly where needed. GeoServer's Dispatcher should really get rid of servlet 
        and webmvc apis, and/or the Dispatcher.REQUEST ThreadLocal -->
      <artifactId>spring-webmvc</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
