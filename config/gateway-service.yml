server:
  compression:
    enabled: true
# Configure routes to services. See https://cloud.spring.io/spring-cloud-gateway/single/spring-cloud-gateway.html
management:
  endpoint:
    gateway:
      enabled: true # default value
    info:
      enabled: true
    health:
      enabled: true
  endpoints:
    web:
      exposure:
        include: gateway, info, health
spring:
  cloud:
#    loadbalancer.ribbon.enabled: false # ribbon is in maintenance mode and should be replaced by spring-cloud-loadbalancer
    gateway:
      actuator:
        verbose:
          enabled: true
      routes:
# WFS routes
      - id: wfs # proxies requests to gateway-service:/wfs to wfs-service:/wfs
        uri: lb://wfs-service #load balanced to the wfs-service instances
        predicates:
        - Path=/wfs,/{segment}/wfs,/schemas/wfs/**
# proxy [/{workspace}]/ows?SERVICE=wfs to wfs-service:[/{workspace}]/ows?SERVICE=wfs. Param value is case insensitive, name is not.
      - id: wfs_ows
        uri: lb://wfs-service
        predicates:
        - Path=/ows,/{segment}/ows
        - RegExpQuery=(?i:service),(?i:wfs) # match service=wfs case insensitively 
# WMS routes
      - id: wms # proxies requests to gateway-service:/wms to wms-service:/wms
        uri: lb://wms-service #load balanced to the wms-service instances
        predicates:
        - Path=/wms,/{segment}/wms,/schemas/wms/**,/openlayers/**,/openlayers3/**
      - id: wms_ows # proxy [/{workspace}]/ows?SERVICE=wms to wms-service:[/{workspace}]/ows?SERVICE=wms. Param value is case insensitive, name is not.
        uri: lb://wms-service
        predicates:
        - Path=/ows,/{segment}/ows
        - RegExpQuery=(?i:service),(?i:wms) # match service=wms case insensitively 
# WCS routes
      - id: wcs # proxies requests to gateway-service:/wcs to wcs-service:/wcs
        uri: lb://wcs-service #load balanced to the wps-service instances
        predicates:
        - Path=/wcs,/{segment}/wcs,/schemas/wcs/**
      - id: wcs_ows # proxy [/{workspace}]/ows?SERVICE=wcs to wcs-service:[/{workspace}]/ows?SERVICE=wcs. Param value is case insensitive, name is not.
        uri: lb://wcs-service
        predicates:
        - Path=/ows,/{segment}/ows
        - RegExpQuery=(?i:service),(?i:wcs) # match service=wcs case insensitively 
# WPS routes
      - id: wps # proxies requests to gateway-service:/wps to wfs-service:/wps
        uri: lb://wps-service #load balanced to the wps-service instances
        predicates:
        - Path=/wps,/{segment}/wps,/schemas/wps/**
      - id: wps_ows # proxy [/{workspace}]/ows?SERVICE=wps to wps-service:[/{workspace}]/ows?SERVICE=wps. Param value is case insensitive, name is not.
        uri: lb://wps-service
        predicates:
        - Path=/ows,/{segment}/ows
        - RegExpQuery=(?i:service),(?i:wps) # match service=wps case insensitively 
# REST configuration routes
      - id: restconfig
        uri: lb://restconfig-v1 #load balanced to the restconfig-v1 instances
        predicates:
        - Path=/rest/**
# Web UI configuration routes
      - id: restconfig
        uri: lb://web-ui
        predicates:
        - Path=/,/index.html,/web,/web/**,/j_spring_security_check,/j_spring_security_logout

logging:
  level:
    root: WARN
    org.geoserver.cloud.autoconfigure: DEBUG
    com.netflix.discovery: WARN
    com.netflix.eureka: WARN
